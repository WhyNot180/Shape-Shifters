Program start

Display start menu

// Menu loop
Loop until play button is pressed:

    If quit button is pressed then:
        End program
    
    If how to play button is pressed then:
        Display how to play screen
        Do nothing until return button is pressed
        Display start menu
    
    If controls button is pressed then:
        Display controls screen
        Loop until return button is pressed:
            If any control button is pressed then:
                Update controls screen to have no button mapped to control
                Wait for user input
                Map control to input
                Update controls screen to have input mapped to control

Display difficulty selection screen

//Increases difficulty the lower it is
Declare variable difficulty

Declare variable max sides

Loop until any difficulty button is pressed:
    If hard difficulty button is pressed then:
        set difficulty to 15
        set max sides to 30
    
    If medium difficulty button is pressed then:
        set difficulty to 25
        set max sides to 20
    
    If easy difficulty button is pressed then:
        set difficulty to 40
        set max sides to 15


Determine distance between ball and player characters
Determine which player character is closest to the ball

set variable amount of sides to 3

Declare variable last recorded time

Declare boolean frame gate

Declare and set variable max number of missing sides to 1

Declare variable difficulty modulo

Declare variable missing sides

//This is essentially a 2d array
Declare and set dynamic array player 1 sides 1-max sides to 0
Declare and set dynamic array player 2 sides 1-max sides to 0
Declare and set dynamic array player 3 sides 1-max sides to 0
Declare and set array all player sides to player 1 sides, player 2 sides, and player 3 sides

// Game loop
Loop until escape key is pressed or 2 players are hit:
    
    Set frame gate to amount of sides is less than max sides and last recorded time is not equal to seconds elapsed

    // When 
    If seconds elapsed modulo difficulty equals 0 and frame gate is true then:
        
        Set difficulty modulo to seconds elapsed modulo 3

        If difficulty modulo is equal to 0 then:
            Increment amount of sides
        
        else if difficulty modulo is equal to 1 then:
            Increment strength of gravity

        else if number of missing sides is less than amount of sides minus 1:
            Increment max number of missing sides

        //Decrementing this variable increases the difficulty as opposed to lowering it
        //TODO: make this a little more intuitive
        Decrement difficulty variable

        Set last recorded time to seconds elapsed
    
    Set missing sides to random number between 1 and max number of missing sides

    For i to size of all player sides:
        For j to missing sides:
            Declare and set variable side missing to random number between 1 and amount of sides

            If variable in place of side missing in player 1 sides is not equal to 1 then:
                Set variable in place of side missing in player 1 sides to 1 

    //Gravity loop
    Loop until ball hits segment or reaches centerpoint of player character:
        If any player presses clockwise rotation key then rotate said player character clockwise
        If any player presses counter clockwise rotation key then rotate said player character counter clockwise
        If any player presses a move button and they are not colliding with anything then move said player in the corresponding direction
        Draw players with amount of sides
        Move ball towards nearest player in the form of gravity
        Draw ball
    
    If ball hits player segment and owner of segment is rotating clockwise then:
        set nearest player to the nearest player above the player
    else if ball hits player segment and owner of segment is rotating counter clockwise then:
        set nearest player to the nearest player below the player
    else:
        destroy player character that was hit
    
//Pausing
If escape key is pressed then:
    Display pause menu
    Do nothing until escape key is pressed
    Return to Game loop

If 2 players are hit then:
    Display game over screen
    Do nothing until return to menu button or play again button is pressed
    If play again button has been pressed then:
        Display game screen
        Goto game loop
    else:
        Goto program start

Program end
